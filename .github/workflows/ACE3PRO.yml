name: Build and Release Kernel

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DEBIAN_FRONTEND: noninteractive
  ROOT_DIR_PREFIX: "ACE3PRO-A15"
  BRANCH: "android14-6.1"
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Free disk space
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq curl
          curl -fsSL https://raw.githubusercontent.com/kou/arrow/e49d8ae15583ceff03237571569099a6ad62be32/ci/scripts/util_free_space.sh | bash


      - name: Setup Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            python3-pip \
            curl \
            git \
            zip \
            unzip \
            gcc \
            g++ \
            make \
            ninja-build \
            file \
            bc \
            bison \
            flex \
            libssl-dev \
            libelf-dev \
            wget \
            build-essential \
            python3-dev \
            python3-setuptools \
            rsync \
            ccache

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 2G

      - name: Install Latest Pahole
        run: |
          sudo apt-get remove --purge -y dwarves
          sudo apt-get install -y git build-essential libdw-dev zlib1g-dev
          git clone --recurse-submodules https://git.kernel.org/pub/scm/devel/pahole/pahole.git
          cd pahole
          cmake .
          sudo make install

      - name: Setup Python and Repo Tool
        run: |
          python3 -m pip install --upgrade pip
          pip3 install gitpython xmltodict
          mkdir -p ~/.bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/.bin/repo
          chmod a+x ~/.bin/repo
          export PATH=$HOME/bin:$PATH  # Add $HOME/bin to PATH
          echo "$HOME/.bin" >> $GITHUB_PATH
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Install repo tool to $HOME/bin
        run: |
         mkdir -p $HOME/bin
         wget -O $HOME/bin/repo https://storage.googleapis.com/git-repo-downloads/repo
         chmod a+x $HOME/bin/repo
         export PATH=$HOME/bin:$PATH
         repo --version


      - name: Configure Build Directory
        run: |
          ROOT_DIR="${ROOT_DIR_PREFIX}-$(date +'%Y-%m-%d-%I-%M-%p')-release"
          echo "ROOT_DIR=${ROOT_DIR}" >> $GITHUB_ENV
          mkdir -p "builds/${ROOT_DIR}"
          cd "builds/${ROOT_DIR}"

      - name: Clone Required Repositories
        working-directory: builds/${{ env.ROOT_DIR }}
        run: |
          git clone https://github.com/TheWildJames/AnyKernel3.git -b $BRANCH
          git clone https://github.com/wings110/susfs4ksu.git -b gki-android14-6.1
          git clone https://github.com/TheWildJames/kernel_patches.git

      - name: Setup Kernel Source
        working-directory: builds/${{ env.ROOT_DIR }}
        run: |
          mkdir -p kernel_platform/oneplus_ace3_pro_v
          cd kernel_platform/oneplus_ace3_pro_v
          repo init -u https://github.com/wings110/kernel_manifest.git -b oneplus/sm8650 -m oneplus_ace3_pro.xml --depth=1
          repo sync -c -j$(nproc --all) --force-sync --no-clone-bundle --no-tags
          rm -rf ./kernel_platform/common/android/abi_gki_protected_exports_*

      - name: Setup KernelSU
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus_ace3_pro_v/kernel_platform
        run: |
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -s next
          cd KernelSU-Next/kernel
          sed -i 's/ccflags-y += -DKSU_VERSION=16/ccflags-y += -DKSU_VERSION=12335/' ./Makefile
          
      - name: Setup SUSFS
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus_ace3_pro_v/kernel_platform
        run: |
          # Create necessary directories
          mkdir -p ./common/fs
          mkdir -p ./common/include/linux
          
          # Copy SUSFS files
          cp ../../../susfs4ksu/kernel_patches/fs/susfs.c ./common/fs/
          cp ../../../susfs4ksu/kernel_patches/include/linux/susfs.h ./common/include/linux/
          cp ../../../susfs4ksu/kernel_patches/include/linux/susfs_def.h ./common/include/linux/
          
          # Copy patches
          cp ../../../susfs4ksu/kernel_patches/KernelSU/0001-Kernel-Implement-SUSFS-v1.5.3.patch ./KernelSU-Next/
          cp ../../../susfs4ksu/kernel_patches/50_add_susfs_in_gki-android14-6.1.patch ./common/
          cp ../../../kernel_patches/69_hide_stuff.patch ./common/
          cp ../../../kernel_patches/selinux.c_fix.patch ./
          cp ../../../kernel_patches/apk_sign.c_fix.patch ./
          cp ../../../kernel_patches/Makefile_fix.patch ./
          cp ../../../kernel_patches/core_hook.c_fix.patch ./
          
          # Apply patches
          cd KernelSU-Next
          patch -p1 < 0001-Kernel-Implement-SUSFS-v1.5.3.patch || true
          
          cd ../common
          patch -p1 < 50_add_susfs_in_gki-android14-6.1.patch || true
          patch -p1 -F 3 < 69_hide_stuff.patch || true
          sed -i '/obj-$(CONFIG_KSU_SUSFS_SUS_SU) += sus_su.o/d' ./fs/Makefile
          
          cd ..
          # patch -p1 -F 3 < selinux.c_fix.patch || true
          # patch -p1 -F 3 < apk_sign.c_fix.patch || true
          # patch -p1 --fuzz=3 < Makefile_fix.patch || true
          # patch -p1 --fuzz=3 < core_hook.c_fix.patch || true

      - name: Configure Kernel
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus_ace3_pro_v/kernel_platform
        run: |
          # Add SUSFS configuration settings
          echo "CONFIG_KSU=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_SU=y" >> ./common/arch/arm64/configs/gki_defconfig        
          echo 'CONFIG_LOCALVERSION="-Wings110-gki@KernelSU-Next+SUSFS"' >> ./common/arch/arm64/configs/gki_defconfig
          echo "# CONFIG_LOCALVERSION_AUTO is not set" >> ./common/arch/arm64/configs/gki_defconfig
          
          # Add additional tmpfs config setting
          echo "CONFIG_TMPFS_XATTR=y" >> ./common/arch/arm64/configs/gki_defconfig
                  
          
          # Remove defconfig check
          sed -i '2s/check_defconfig//' ./common/build.config.gki
          # Custom Kernel Name
          sed -i "s/'%s' -dirty/'%s'/" msm-kernel/scripts/setlocalversion
          sed -i 's/cut -c1-12/cut -c1-8/' msm-kernel/scripts/setlocalversion
          sed -i "s/'%s' -dirty/'%s'/" common/scripts/setlocalversion
          sed -i 's/cut -c1-12/cut -c1-8/' common/scripts/setlocalversion
          
          # LTO=full BUILD_CONFIG=common/build.config.gki.aarch64 build/build.sh

      - name: Build Kernel
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus_ace3_pro_v/
        run: |
          cd kernel_platform
          mkdir out
          export PATH="/usr/lib/ccache:$PATH"
          # Modified build command with correct syntax
          ./build_with_bazel.py \
            -t pineapple \
            gki \
            --jobs=$(nproc --all) \
            --verbose_failures \
            --nokleaf_localversion \
            --config=stamp \
            --user_kmi_symbol_lists=//msm-kernel:android/abi_gki_aarch64_qcom \
            --lto=thin \  # 启用 thin LTO
            -o "$(pwd)/out"          
            
      - name: Debug Working Directory
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus_ace3_pro_v/kernel_platform/out/dist
        run: |         
          pwd
          ls -l

      - name: Create ZIP Package
        working-directory: builds/${{ env.ROOT_DIR }}
        run: |
          cp kernel_platform/oneplus_ace3_pro_v/kernel_platform/out/dist/Image AnyKernel3/Image
          cp kernel_platform/oneplus_ace3_pro_v/kernel_platform/out/dist/Image.lz4 AnyKernel3/Image.lz4
          cd AnyKernel3  # Move to AnyKernel3 directory
          ZIP_NAME="Anykernel3-OP-A15-android14-6.1-KernelSUNext-SUSFS-$(date +'%Y-%m-%d-%H-%M-%S').zip"
          echo "Creating zip file $ZIP_NAME..."
          zip -r "../$ZIP_NAME" ./*
          ls -lh "../$ZIP_NAME"
          echo "zip_name=$ZIP_NAME" >> $GITHUB_ENV

      - name: Publish Release
        run: |
          # Change to the correct directory
          cd "./builds/${{ env.ROOT_DIR }}"

          # Debugging variables
          echo "ZIP_NAME: ${{ env.zip_name }}"
          ZIP_FILE_PATH="${GITHUB_WORKSPACE}/builds/${{ env.ROOT_DIR }}/${{ env.zip_name }}"
          echo "ZIP_FILE_PATH: $ZIP_FILE_PATH"

          # Validate ZIP file existence
          if [ -f "$ZIP_FILE_PATH" ]; then
              echo "ZIP file found: $ZIP_FILE_PATH"
          else
              echo "Error: ZIP file not found at $ZIP_FILE_PATH!"
              exit 1
          fi

          # Define the repository name if not already set
          REPO_NAME=${REPO_NAME:-$GITHUB_REPOSITORY}

          # Create a release using the GitHub CLI
          gh release create "v${{ env.BRANCH }}-$(date +'%Y.%m.%d-%H%M%S')" "$ZIP_FILE_PATH" \
            --repo "$REPO_NAME" \
            --title "ACE3PRO A15 ${{ env.BRANCH }} With KernelSU & SUSFS" \
            --notes "Kernel release" \
            --prerelease
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
           
      - name: Upload Build Logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-logs
          path: |
            builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus_ace3_pro_v/kernel_platform/out/*.log
            builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus_ace3_pro_v/kernel_platform/**/*.rej
          retention-days: 5
